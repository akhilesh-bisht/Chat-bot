import { GoogleGenerativeAI } from "@google/generative-ai";
import dotenv from "dotenv";
import KnowledgeBase from "../models/knowledgeBase.js";
dotenv.config();

const ai = new GoogleGenerativeAI(process.env.GOOGLE_API_KEY);

export const getChatResponse = async (req, res) => {
  try {
    const { message } = req.body;
    console.log("User Message:", message);

    if (!message) {
      return res.status(400).json({ error: "Message is required" });
    }

    // ЁЯУМ **Fetch stored text from MongoDB**
    const knowledgeData = await KnowledgeBase.find();

    if (!knowledgeData.length) {
      return res.status(404).json({ error: "рдХреЛрдИ рдЬрд╛рдирдХрд╛рд░реА рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ рд╣реИред" });
    }

    // **Extract only the text content**
    const contextText = knowledgeData.map((doc) => doc.content).join("\n");
    console.log("Extracted Content:", contextText.substring(0, 500));

    // ЁЯза **Initialize Gemini AI Model**
    const model = ai.getGenerativeModel({ model: "gemini-1.5-flash" });

    // ЁЯУМ **Better Prompt with Context**
    const prompt = `
      **рддреБрдо рдПрдХ рд╣рд┐рдВрджреА рдЪреИрдЯрдмреЙрдЯ рд╣реЛред**
      рдиреАрдЪреЗ рджреА рдЧрдИ рдЬрд╛рдирдХрд╛рд░реА рдХреЛ рд╕рдВрджрд░реНрдн рдХреЗ рд░реВрдк рдореЗрдВ рдЙрдкрдпреЛрдЧ рдХрд░реЛ рдФрд░ рд╕рд┐рд░реНрдлрд╝ рдЙрд╕реА рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рдЙрддреНрддрд░ рджреЛред

      ***рд╕рдВрджрд░реНрдн:***
      ${contextText}

      ***рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рдХрд╛ рдкреНрд░рд╢реНрди:***
      ${message}

      ***рдЙрддреНрддрд░ рдХреЗрд╡рд▓ рд╣рд┐рдВрджреА рдореЗрдВ рджреЛред***
    `;

    console.log("Prompt Sent to Gemini:", prompt.substring(0, 500));

    // тЬи **Generate AI Response**
    const result = await model.generateContent({
      contents: [{ role: "user", parts: [{ text: prompt }] }],
    });

    console.log("Gemini API Response:", JSON.stringify(result, null, 2));

    // ЁЯУМ **Extract Response Correctly**
    const reply =
      result?.response?.candidates?.[0]?.content?.parts?.[0]?.text ||
      "рдореБрдЭреЗ рдХреЛрдИ рдЙрддреНрддрд░ рдирд╣реАрдВ рдорд┐рд▓рд╛ред";

    res.json({ reply });
  } catch (error) {
    console.error(
      "Chatbot Error:",
      error.response ? error.response.data : error.message
    );
    res
      .status(500)
      .json({ error: "рдХреБрдЫ рд╕рдорд╕реНрдпрд╛ рд╣реЛ рдЧрдИ рд╣реИред рдмрд╛рдж рдореЗрдВ рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред" });
  }
};
